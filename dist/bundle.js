!function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:i})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){"use strict";n.r(t);var i,o=window.localStorage,r=0;function s(){if(console.log("start().start"),i=o.getItem("cities")){return JSON.parse(i)}return new Map}function a(){console.log("addCity().start");let e=document.getElementById("input").value;fetch("http://api.openweathermap.org/data/2.5/forecast?q="+e+"&APPID=5c02f8724103bec9758473d643575c12").then(e=>e.ok?e.json():Promise.reject("something went wrong!")).then(e=>{!function(e){const t=s();t.set(r,e),r++,o.setItem("cities",JSON.stringify([...t])),document.getElementById("error").innerHTML="",makeView(t)}(e)}).catch(t=>document.getElementById("error").innerHTML="Can't find \""+e+'"')}function c(e){let t=[];const n=273.15;return t.push(Math.round(e.list[0].main.temp-n)),t.push(Math.round(e.list[8].main.temp-n)),t.push(Math.round(e.list[16].main.temp-n)),t.push(Math.round(e.list[24].main.temp-n)),t.push(Math.round(e.list[32].main.temp-n)),t.push((t[0]+t[1]+t[2]+t[3]+t[4])/5),t}function l(e){let t;switch(e%6){case 0:t="Sunday";break;case 1:t="Monday";break;case 2:t="Tuesday";break;case 3:t="Wednesday";break;case 4:t="Thursday";break;case 5:t="Friday";break;case 6:t="Saturday"}return t}window.onload=function(){const e=s();document.getElementById("form").addEventListener("submit",e=>{a(),e.preventDefault()}),console.log(e),function(e){console.log("makeView().start");let t=document.getElementById("index"),n=new Date;t.innerHTML='<div class="element">City Name</div><div class="element">Today</div>';for(let e=1;e<5;e++)t.innerHTML=t.innerHTML+'<div class="element">'+l(n.getDay()+e)+"</div>";if(t.innerHTML=t.innerHTML+'<div class="element">Average</div>',t.innerHTML=t.innerHTML+'<div class="remove"></div>',void 0!==e||null!=e){let t=document.getElementById("list-of-cities");t.innerHTML="";for(let[n,i]of e){console.log(i);let e=c(i);t.innerHTML=t.innerHTML+'<div class="city"><div class="element">'+i.city.name+'</div><div class="element">'+e[0]+'</div><div class="element">'+e[1]+'</div><div class="element">'+e[2]+'</div><div class="element">'+e[3]+'</div><div class="element">'+e[4]+'</div><div class="element">'+e[5]+'</div><div class="remove" onclick="removeCity('+n+')">Remove</div></div>'}console.log(o),console.log(e)}}(e)}},function(e,t,n){e.exports=n(0)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,